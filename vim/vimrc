""" vundle - plugins settings
set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()
" alternatively, pass a path where Vundle should install plugins
"let path = '~/some/path/here'
"call vundle#rc(path)

" let Vundle manage Vundle, required
Plugin 'gmarik/vundle'

" Plugins:

"  Gernal extension plugins
Plugin 'Valloric/YouCompleteMe'
Plugin 'junegunn/fzf'
Plugin 'scrooloose/nerdtree'
Plugin 'scrooloose/nerdcommenter'
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-repeat'
Plugin 'Yggdroot/indentLine'
Plugin 'majutsushi/tagbar'
"Plugin 'terryma/vim-multiple-cursors'
"Plugin 'tpope/vim-fugitive'

" Markdown plugins
Plugin 'godlygeek/tabular'
Plugin 'plasticboy/vim-markdown'
Plugin 'iamcco/markdown-preview.vim'

" YouCompleteMe settings"
let g:ycm_server_keep_logfiles = 1
let g:ycm_server_log_level = 'debug'
let g:ycm_path_to_python_interpreter='/usr/local/Cellar/python/3.7.1/bin/python3'
let g:ycm_python_binary_path = '/anaconda3/bin/python3'
let g:ycm_python_binary_path = '/anaconda3/envs/DataScience/bin/python3'
let g:ycm_global_ycm_extra_conf = "~/.ycm_extra_conf.py"
let g:ycm_autoclose_preview_window_after_completion = 1
map <leader>g  :YcmCompleter GoToDefinitionElseDeclaration<CR>

"python with virtualenv support
py3 << EOF
import os
import sys
if 'VIRTUAL_ENV' in os.environ:
    project_base_dir = os.environ['VIRTUAL_ENV']
    activate_this = os.path.join(project_base_dir, 'bin/activate_this.py')
    execfile(activate_this, dict(__file__=activate_this))
EOF

" nerdtree settings"
map <C-n> :NERDTreeToggle<CR> 
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
let NERDTreeNodeDelimiter = "\t"

" fzf settings"
map <C-p> :FZF<CR>

" tagbar settings"
" need to installed ctags
 let g:tagbar_ctags_bin = '/usr/local/Cellar/ctags/5.8_1/bin/ctags'
nmap <F8> :TagbarToggle<CR>

" vim-markdown settings"
"let g:vim_markdown_folding_disabled = 1



filetype plugin indent on     " required

" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList          - list configured plugins
" :PluginInstall(!)    - install (update) plugins
" :PluginSearch(!) foo - search (or refresh cache first) for foo
" :PluginClean(!)      - confirm (or auto-approve) removal of unused plugins
"
" see :h vundle for more details or wiki for FAQ
" NOTE: comments after Plugin commands are not allowed.
" Put your stuff after this line

syntax on    	        " 語法上色

set mouse=a
set encoding=utf-8

set number 	            " 顯示行號
if version >= 704
    set relativenumber      " 顯示相對行號
endif

set ruler 	            " 顯示右下角詳細資訊
set cindent 	        " 自動縮排 
set cursorline 	        " 底線 目前游標位置
set expandtab  	        " 將文件中的tab轉成space顯示
set backspace=2         " Insert mode 才能刪東西
set tabstop=4 	        " tab換成幾個空格
set shiftwidth=4        " 自動縮排時的空格數量

" Enable folding
set foldmethod=indent
set foldlevel=99
" Enable folding with the spacebar
nnoremap <space> za

" :set paste toggle
set pastetoggle=<leader>p

" powerline settings
set rtp+=/anaconda3/lib/python3.6/site-packages/powerline/bindings/vim/
set laststatus=2
set t_Co=256

inoremap ( ()<Esc>i
inoremap " ""<Esc>i
inoremap ' ''<Esc>i
inoremap [ []<Esc>i
inoremap {<CR> {<CR>}<Esc>ko
inoremap {{ {}<ESC>i

""" COLOR settings
set background=dark
colorscheme Tomorrow-Night-Bright 
"colorscheme kolor 
"colorscheme molokai
"colorscheme solarized


